// Will find the first non escaped quote in a JSON String
// --------------------------------------------------------------------------------
// @param [string] $string: to search in
// --------------------------------------------------------------------------------
// @return [number] position of the last non escaped quote

@function _find-ending-quote($string){
  $backslash: str-slice('\\', 1, 1); // Dirty hack to have a single backslash
  $escaped-chars: $backslash '"' '/' 'b' 'f' 'n' 'r' 't' 'u';

  $pos: 1;
  $length: str-length($string);
  $backslash-found: false;

  @while $pos <= $length {
    $char: str-slice($string, $pos, $pos);

    // Previous char was a backslash
    @if $backslash-found {

      // Special case, the 'u' character
      @if $char == 'u' {
        // Skip the next 4 characters, assumed to be hexadecimal
        $pos: $pos + 4;
      }

      // Invalid character escaped
      @else if not index($escaped-chars, $char) {
        @return 0;
      }

      $backslash-found: false;
    }

    @else if $char == $backslash {
      $backslash-found: true;
    }

    // Unescaped quote found
    @else if $char == '"' {
      @return $pos;
    }

    $pos: $pos + 1;
  }

  // No end of string found
  @return 0;
}
