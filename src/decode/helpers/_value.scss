// JSON.parse value
@function _json-decode--value($source, $position) {
  $length: str-length($source);

  @while $position <= $length {
    $char: str-slice($source, $position, $position);
    $position: $position + 1;

    @if $char == '{' {
      @return _json-decode--map($source, $position);
    }
    @else if $char == '[' {
      @return _json-decode--list($source, $position);
    }
    @else if $char == 't' {
      @return _json-decode--true($source, $position);
    }
    @else if $char == 'f' {
      @return _json-decode--false($source, $position);
    }
    @else if $char == '"' {
      @return _json-decode--string($source, $position);
    }
    @else if $char == 'n' {
      @return _json-decode--null($source, $position);
    }
    @else if index('1' '2' '3' '4' '5' '6' '7' '8' '9' '0' '-' '.', $char) {
      @return _json-decode--number($source, $position);
    }
    @else if $char == ' ' {
      // @continue;
    }
    @else {
      @return _throw("Unexpected token `" + $char + "`.", $position);
    }
  }

  @return _throw("Empty JSON string.", $position);
}
