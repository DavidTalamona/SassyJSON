// Cast a JSON encoded string into a rgb(a) color
// --------------------------------------------------------------------------------
// @param [string] $string: JSON string
// --------------------------------------------------------------------------------
// @return [color] rgb(a) color

@function _from-rgb($string) {
  $frags: ();
  $is-alpha: str-slice($string, 4, 4) == 'a';
  $start: str-index($string, "(");
  $length: str-length($string);

  @for $i from $start through $length {
    $token: str-slice($string, $i, $i);
    @if $token == ' ' {
      // @continue;
    }
    @else if $token == '(' or $token == ',' {
      $frags: append($frags, "");
    }
    @else if $token == ')' {
      $red: _get-color-value(nth($frags, 1));
      $green: _get-color-value(nth($frags, 2));
      $blue: _get-color-value(nth($frags, 3));

      @if not $red or not $green or not $blue {
        @return $string;
      }

      @if $is-alpha {
        $alpha: _get-color-value(nth($frags, 4));
        @if not $alpha {
          @return $string;
        }
        @return rgba($red, $green, $blue, $alpha);
      }

      @return rgb($red, $green, $blue);
    }
    @else {
      $frags: set-nth($frags, length($frags), nth($frags, length($frags)) + $token);
    }
  } 
}