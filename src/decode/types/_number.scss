// JSON.parse a number
@function _json-decode--number($source, $position) {
  $length: str-length($source);
  $position: $position - 1; // Roll back pointer
  $strings: '0' '1' '2' '3' '4' '5' '6' '7' '8' '9';
  $numbers:  0   1   2   3   4   5   6   7   8   9;

  $result: 0;
  $divider: 0;
  $minus: false;

  @while $position <= $length {
    $char: str-slice($source, $position, $position);
    $index: index($strings, $char);
    $position: $position + 1;

    @if $char == '-' { 
      $minus: true 
    }
    @else if $char == '.' { 
      $divider: 1 
    }
    @else {
      $number: nth($numbers, $index);

      @if $divider == 0 {
        $result: $result * 10;
      }
      @else {
        $divider: $divider * 10;
        $number: $number / $divider;
      }

      $result: $result + $number;
      $next: str-slice($source, $position, $position);
      @if $position <= $length
      and not index($strings, $next)
      and $next != '.' {
        @return ($position, if($minus, $result * -1, $result));
      }
    }

  }

  @return ($position, if($minus, $result * -1, $result));
}
